Program AshamanGemCutter;
  {$DEFINE SMART}
  {$I SRL-6/SRL.Simba}

{
AshamanGemCutter v2.0
-Make sure zoom is farthest out + srl graphic settings
-Turn off xp popup as well as make-x progress window
-Start at SW chest
-Have gems in top right slot of bank
-xp bar counter set to total or crafting
and the counter can't say 'lots' either (and put it in top right corner of chatbox
-FILL OUT THE STUFF BELOW
-READ THE OP DIRECTIONS
}

///////////////////////////////////////////////////////////////////////
//                                                                   //
//                  Begin of user setup                              //
//                Fill in the fields below                           //
//                                                                   //
///////////////////////////////////////////////////////////////////////

Const
  {Method Settings}
  LeftClick   = True;     // ***Left click on chest? Small chance it could mess up, false for right click***
  QuickKey     = 0;       // ***What is the key you've set the uncut gems to? Don't f this up! ***

  {Break Settings}
  TakeBreaks   = False;   // ***Take Breaks or no?***
  SwitchWorlds = False;   // ***Switch worlds after a break?***
  BreakIn      = 600;     // ***How long before we take a break? (minutes)***
  BreakFor     = 15;      // ***How long will we break for? (minutes)***
  Bir          = 13;      // ***Random minutes to add/subtract from how long until we break***
  Bfr          = 7;       // ***Random minutes to add/subjtract from break duraction***

Procedure DeclarePlayers;
Begin
  Players.Setup(['Player1'], 'PlayerList'); //***Fill this out, Player1 = Name of the account in player manager, PlayerList = name of the player file***
  SetLength(Players,1);

  //***If NOT using the player manager, fill out the loginname and password below, otherwise ignore those two***
  With players[0] Do
  Begin
  // loginName := '';      {Remove the "//" from this line if you arent using player manager}
  // password := '';       {Remove the "//" from this line if you arent using player manager}
    IsActive := True;
    World := 0;            {Change this if you want to set a world to login to}
   // BankPin := ;         {Remove the "//" from this line if you arent using player manager and you have a pin}
  End;
  CurrentPlayer := 0;
End;

///////////////////////////////////////////////////////////////////////////////////////////
//                                                                                       //
//                            End of user setup                                          //
//           Don't touch below this line unless you know what you're doing!!             //
//                                                                                       //
///////////////////////////////////////////////////////////////////////////////////////////

Const
  ScriptVersion ='2.1';
  Debug = False;

Var
  StartingExperience,XP,GemCount: Integer;
  W,X,Y,Z,RealBTime,BreakRounds,TotalBreaks: Integer;
  Timeout,CurrentBTime: TTimeMarker;
  GemType: String;
  GemsPH,XPH: Extended;
  GetItem: Boolean;

{*******************************************************************************
Function AutoupdateMe;
By: Shuttleu
Edited By: Ashaman88
Description: Autoupdates Script.
*******************************************************************************}
Procedure AutoUpdateMe;
Var
  Neifile: Integer;
  OnlineVersion, NewScript, NeiFeilNennen: String;
Begin
  Writeln('Checking for script updates...');
  OnlineVersion := GetPage('http://ashamangemcutter.googlecode.com/git/Version.txt');
  Writeln('Online Version: '+ToStr(OnlineVersion));
  Writeln('Local Version: '+ToStr(ScriptVersion));
  If (trim(OnlineVersion) > ScriptVersion) Then
  Begin
    WriteLn('Newer script version online!');
    WriteLn('Autoupdating to newer version.');
    NewScript := GetPage('http://ashamangemcutter.googlecode.com/git/AshamanGemCutter.simba');
    NeiFeilNennen := ScriptPath+ 'AshamanGemCutter V'+OnlineVersion+'.simba';
    Neifile := Rewritefile(NeiFeilNennen, true);
    Try
      WriteFileString(Neifile, NewScript);
    Except
      Begin
        WriteLn('Fatal error writing to '+NeiFeilNennen+'!!');
        Terminatescript;
      End;
    End;
    CloseFile(Neifile);
    WriteLn('New script downloaded to '+NeiFeilNennen+'!! Please use this one!!');
    TerminateScript;
  End Else
    WriteLn('You have the latest version of the script!');
End;

Procedure FindNormalRandoms;
Begin
  ExitSquealOfFortune;
  ClaimSpinTicket;
End;

Function Antiban: Boolean;
Var
  I: Integer;
Begin
  I := Random(600);
  Case I Of
    1: boredHuman(false);
    2..7:
      Begin
        hoverSkill(SKILL_CRAFTING);
        Wait(GaussRangeInt(1000,2000));
      End;
    8..50: mouseMovingObject;
    51..100: SleepAndMoveMouse(RandomRange(100,2000));
    101..400:
      Begin
        MouseOffClient(Random(4));
        Wait(RandomRange(2000, 3000));
      End;
    501..600: Wait(RandomRange(1000, 2000));

  End;
  Wait(GaussRangeInt(0, 500));
End;

Function BreakHandler(BreakIn, BreakFor, randBreakIn, randBreakFor: Integer): Boolean;
Var
  H,M,S: Integer;
Begin
  If Not IsLoggedIn Then
    Exit;

  If Not TakeBreaks Then
    Exit;

  If (GetTimeRunning < ((W) + (Y) + BreakRounds)) Then
    Exit Else
    If (GetTimeRunning > ((W) + (Y) + BreakRounds)) Then
    Begin
      RealBTime := Round((X+Z)/60000);
      Writeln('Taking a break for about ' + IntToStr(RealBTime) + ' minutes.');
      Players[CurrentPlayer].Logout;
      CurrentBTime.Reset;
      CurrentBTime.Start;
      Repeat
        Wait(21000);
        ConvertTime((X+Z)-CurrentBTime.GetTime,H,M,S);
        Writeln('Breaktime left: '+IntToStr(H)+':'+IntToStr(M)+':'+IntToStr(S));
      Until(CurrentBTime.GetTime>(X+Z));
      Writeln('Logging in.');
      Players[CurrentPlayer].Login;
      Wait(4000);
      Timeout.Reset;
      Timeout.Start;
      Result := IsLoggedIn;
      Minimap.SetAngle(MM_DIRECTION_EAST);
      MainScreen.SetAngle(MS_ANGLE_HIGH);
      IncEx(BreakRounds, (W) + (X));
      Inc(TotalBreaks);
      Writeln('The next break will occur in about ' + IntToStr(BreakIn) + ' minutes.');
      W := (BreakIn * 60000);
      X := (BreakFor * 60000);
      Y := RandomRange(-BIR * 60000, BIR * 60000);
      Z := RandomRange(-BFR * 60000, BFR * 60000);
    End;
End;

function TRSChatBox.getXP: Integer;
var
  b: TBox;
  s: String;
  tpa : TPointArray;
  atpa : T2DPointArray;
  i,cts,p: Integer;
begin
  b := self.getBounds();
  b.edit(+(b.x2-b.x1)-140, +10, -5, -94);

  findColorsTolerance(tpa, 14013909, b, 4,colorSetting(2, 0.00, 0.00));

  if length(tpa) < 2 then
  begin
    print('chatBox.getXP(): No XP found', TDebug.SUB);
    Exit;
  end;

  atpa := tpa.cluster(5);

  b:= atpa.getbounds;
  b.edit(-2,-2,+2,+3);

  s:=Replace(tesseractgettext(b.x1,b.y1,b.x2,b.y2, FILTER_SMALL_CHARS), ' ', '', [rfReplaceAll]);

  P := Pos('x', S);
  if P > 0 then
    Result := StrToIntDef(ExtractFromStr(Copy(s, P, Length(S)), Numbers), 0)
  else
    Result := StrToIntDef(ExtractFromStr(S, Numbers), 0);

  print('chatBox.getXP(): XP found: ' + tostr(result), TDebug.SUB);
end;

Procedure ProgressReport;
Var
  TTB: Integer;
Begin
  ClearDebug;

  TTB := (((W) + (Y) + BreakRounds)-GetTimeRunning);

  XP := (ChatBox.GetXP - StartingExperience);
  XPH := Round(XP * (3600.0 / (GetTimeRunning / 1000.0)));
  GemsPH := Round((GemCount * (3600.0 / (GetTimeRunning / 1000.0))));

  If XPH < 1000 Then
    XPH:=1000.0;

  Writeln('========AshamanGemCutter v'+ScriptVersion+'=========');
  Writeln('Time Running: ' + TimeRunning);
  Writeln(GemType+'''s Cut: ' + ToStr(GemCount));
  Writeln('Experience Earned: ' + IntToStr(XP));
  Writeln('Experience/Hour: ' + ToStr(XPH));
  Writeln(GemType+'''s/Hour: ' + ToStr(GemsPH));
  Writeln('======================================');
  If TakeBreaks Then
    Writeln('Time until break: '+MsToTime(TTB, Time_Bare));
End;

Function OpenBank(LClick: Boolean): Boolean;
Var
  X,Y,H,I,Time: Integer;
  T: TTimeMarker;
  ChestBox: TBox;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  TBA: TBoxArray;
Begin
  Result := False;

  If Not IsLoggedIn Then
    Exit;

  Result:= BankScreen.IsOpen Or PinScreen.IsOpen;
  If Result Then
    Exit;

  If (ChooseOption.OptionsExist(['Exam','mine','Examine','Canc','ncel','Cancel'],400)) Then
  Begin
    If Debug Then
      Writeln('Closing options menu');
    MouseBox(TabBackpack.GetBounds,Mouse_Move);
  End;

  ChestBox:=Mainscreen.playerBox;
  ChestBox.Edit(-35,-35,+35,+35);

  findColorsTolerance(tpa, 7433830, ChestBox, 18,colorSetting(2,0.18,0.07));    //silver

  atpa := tpa.cluster(15);
  atpa.filterBetween(0, 10);
  atpa.filterBetween(200, 10000);
  atpa.sortFromFirstPoint(Point(330,200));

  SetLength(TPA,0);

  If (Length(ATPA) = 0) Then
  Begin
    If Debug Then
      Writeln('No booth found.');
    Exit;
  End;

  If Debug Then
    Try
      debugATPA(ATPA);
    Except
      Writeln('Box out of bounds');
    End;

  H := High(ATPA);

  For I:= 0 To H Do
  Begin
    If Debug Then
      Writeln('Silver Chest Length: '+ToStr(Length(atpa[i]))+' for I:= '+ToStr(I));

    ChestBox := ATPA[I].GetBounds;
    ChestBox.Edit(-10,0,+10,0);
    ChestBox.SetLimit(Mainscreen.GetBounds);

    With ChestBox Do
    Begin
      If Not IsLoggedIn Then
        Exit;

      findColorsTolerance(TPA, 987927, ChestBox, 1,colorSetting(2, 2.78,7.16));  //BLACKKKKK

      If Debug Then
        Writeln('Black Chest Length: '+ToStr(Length(TPA))+' for I:= '+ToStr(I));

      If Length(TPA) > 30 Then
      Begin
        SetArrayLength(TBA, Length(TBA)+1);
        ChestBox.Edit(+12,+2,-10,-2);
        TBA[High(TBA)] := ChestBox;
      End;
      SetLength(TPA,0);
    End;
  End;

  Try
    SmartImage.Clear;
    SmartImage.DrawBoxes(TBA, False, clRed);
  Except
    Writeln('Failed Drawing Boxes.');
  End;

  SetLength(ATPA,0);

  For I := 0 To High(TBA) Do
  Begin
    If (ChooseOption.OptionsExist(['Exam','mine','Examine','Canc','ncel','Cancel'],400)) Then
    Begin
      If Debug Then
        Writeln('Closing options menu');
      MouseBox(TabBackpack.GetBounds,Mouse_Move);
    End;


    Result:= BankScreen.IsOpen Or PinScreen.IsOpen;
    If Result Then
      Break;

    MouseBox(TBA[I]);

    If (IsMouseOverText(['Use','pen','chest','ches','hest'],300)) Then
    Begin
      If Debug Then
        Writeln('Found chest, Clicking.');

      SmartImage.Clear;

      If LClick Then
        FastClick(Mouse_Left) Else
        Begin
          FastClick(Mouse_Right);
          If Not ChooseOption.Select(['Use','chest'],RandomRange(700,900)) Then
          Begin
            SetLength(TBA,0);
            Exit;
          End;
        End;

      Time:=GaussRangeInt(3000,8000);
      T.Start;
      Repeat
        If Not IsLoggedIn Then
          Exit;
        If T.GetTime>Time Then
        Begin
          If Debug Then
            Writeln('Took too long to open chest');
          SetLength(TBA,0);
          Exit;
        End;
        Wait(Random(100));
      Until BankScreen.IsOpen Or PinScreen.IsOpen;
      SetLength(TBA,0);
      Result:=True;
      Exit;
    End;
  End;
  SetLength(TBA,0);
End;

Function Banking: Boolean;
Var
  I: Integer;
  T: TTimeMarker;
Begin
  If Not IsLoggedIn Then
    Exit;

  T.Start;
  Repeat
    If BankScreen.IsOpen Then
    Begin
      Result:=True;
      Break;
    End;

    If Not IsLoggedIn Then
      Exit;

    If OpenBank(LeftClick) Then
      Break;
  Until T.GetTime>6000;

  PinScreen.Enter(Players[CurrentPlayer].BankPin);

  If BankScreen.GetPackCount > 0 Then
    BankScreen.QuickDeposit(QUICK_DEPOSIT_INVENTORY);

  For I:=0 To 3 Do
    If BankScreen.Withdraw(10, WITHDRAW_AMOUNT_ALL, ['']) Then
      Break;


  BankScreen.Close;

  MouseBox([293,332,505,348]);

  T.Reset;
  T.Start;
  Repeat
    If T.GetTime>30000 Then
    Begin
      If Not IsLoggedIn Then
        Exit;
      Writeln('Out of gems');
      TerminateScript;
    End;
    If Not IsLoggedIn Then
      Exit;
  Until (TabBackpack.IsItemInSlot(28));

  Result:=True;

  T.Reset;
  T.Start;
  Repeat
    Wait(100);
    If Not Bankscreen.IsOpen Then
      Break;
  Until T.GetTime>10000;
End;

Procedure CutGems;
Var
  X,Y: Integer;
  T: TTimeMarker;
Begin
  If Not IsLoggedIn Then
    Exit;

  Wait(GaussRangeInt(0, 500));

  SendKeys(ToStr(QuickKey), 60 + Random(60), 60 + Random(60));

  Wait(GaussRangeInt(0, 100));

  MouseBox([293,332,505,348]);

  If Not Productionscreen.IsOpen(RandomRange(4000,6000)) Then
    Exit;

  Wait(GaussRangeInt(0, 200));

  If GetItem Then
  Begin
    GemType:= Productionscreen.getSelectedBoxText;
    GetItem:=False;
  End;

  Productionscreen.ClickStart;

  SRL_Events[EVENT_ANTIBAN] := nil;
  If Not TabBackpack.waitSlotPixelChange(3,GaussRangeInt(10000, 20000)) Then
  Begin
    SRL_Events[EVENT_ANTIBAN] := @Antiban;
    Exit;
  End;

  SRL_Events[EVENT_ANTIBAN] := @Antiban;

  If TabBackpack.waitSlotPixelChange(28,GaussRangeInt(25000, 45000)) Then
  Begin
    IncEx(GemCount,28);
    ProgressReport;
  End;
End;

Procedure Setup;
Begin
  ClearDebug;
  AutoUpdateMe;

  SmartEnableDrawing := True;
  SRL_Events[EVENT_ANTIBAN] := @Antiban;

  SetupSRL;

  DeclarePlayers;
  If Not IsLoggedIn Then
  Begin
    If Not Players[CurrentPlayer].Login Then
      TerminateScript;

    Writeln('Just loggedin, waiting a bit');
    Wait(RandomRange(6000,10000));
  End;

  If Not Debug Then
    DisableSRLDebug:=True;
  ClearDebug;

  MainScreen.SetAngle(MS_ANGLE_HIGH);
  Minimap.SetAngle(MM_DIRECTION_EAST);
  FindNormalRandoms;

  If conversationBox.continue(true, true) Then
    Wait(Randomrange(2000,3000));

  StartingExperience:=ChatBox.GetXP;

  W := (BreakIn * 60000);
  X := (BreakFor * 60000);
  Y := RandomRange(-BIR * 60000, BIR * 60000);
  Z := RandomRange(-BFR * 60000, BFR * 60000);

  GetItem:= True;
  Writeln('Goodluck!');
End;

Procedure MainLoop;
Begin
  If Banking Then
    CutGems;
  BreakHandler(BreakIn,BreakFor,Bir,Bfr);
  If Not IsLoggedIn Then
  Begin
     If Not Players[CurrentPlayer].Login Then
        TerminateScript;
    MainScreen.SetAngle(MS_ANGLE_HIGH);
    Minimap.SetAngle(MM_DIRECTION_EAST);
    Timeout.Reset;
    Timeout.Start;
  End;
  Wait(100);
End;

Begin
  Setup;
  Repeat
    MainLoop;
  Until (Players.GetActive() = 0);
End.
